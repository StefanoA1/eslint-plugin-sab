name: CI

on:
  push:
    branches:
      - main
    tags-ignore:
      - '*'
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 24
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - run: npm run lint

  test:
    needs: lint
    strategy:
      matrix:
        node-version: [20, 22, 24]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - run: npm run test:unit

  find-missing:
    needs: test
    strategy:
      matrix:
        config: ['ava', 'core', 'css-modules']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 24
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - run: npm ci
      - run: npm run find-missing -- ${{ matrix.config }}

  publish:
    needs: find-missing
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: actions/setup-node@v4
        with:
          node-version: 24
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Clean install
        run: npm ci
      - name: Build
        run: npm run build
      - name: Bump version, push tag and publish
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git config --global credential.helper store
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          if [[ "$COMMIT_MSG" == *"release: major"* ]]; then
            echo "Major bump"
            npm version major -m "Github CI: Bump version to %s"
            echo "https://$GITHUB_ACTOR:${{ secrets.ESLINT_PAT }}@github.com" > ~/.git-credentials
            git push origin HEAD:main --tags
          elif [[ "$COMMIT_MSG" == *"release: minor"* ]]; then
            echo "Minor bump"
            npm version minor -m "Github CI: Bump version to %s"
            echo "https://$GITHUB_ACTOR:${{ secrets.ESLINT_PAT }}@github.com" > ~/.git-credentials
            git push origin HEAD:main --tags
          elif [[ "$COMMIT_MSG" == *"release: patch"* ]]; then
            echo "Patch bump"
            npm version patch -m "Github CI: Bump version to %s"
            echo "https://$GITHUB_ACTOR:${{ secrets.ESLINT_PAT }}@github.com" > ~/.git-credentials
            git push origin HEAD:main --tags
          fi
          if [[ "$COMMIT_MSG" == *"release: skip"* ]] || [[ "$COMMIT_MSG" != *"Github CI: Bump version to"* ]]; then
            echo "Skipping release"
            exit 0
          fi
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN_ESLINT }}" > ~/.npmrc
          npm publish
        env:
          GITHUB_ACTOR: ${{ github.actor }}
